ENV['USE_FRAMEWORKS'] = 'static'


def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve('#{script}', {paths: [process.argv[1]]})", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '13.0'
prepare_react_native_project!
setup_permissions(['Camera'])

flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
use_frameworks! :linkage => linkage.to_sym if linkage

target 'FaceRecognitionSdkExample' do
  config = use_native_modules!
  flags = get_default_flags()

  # ðŸ’¥ Necessary when manually linking a React Native module
  pod 'React', :path => '../node_modules/react-native/', :modular_headers => false
  # pod 'React-Core', :path => '../node_modules/react-native/React/Core', :modular_headers => false
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules', :modular_headers => false
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image', :modular_headers => false
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS', :modular_headers => false
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network', :modular_headers => false
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => false
  pod 'ReactCommon', :path => '../node_modules/react-native/ReactCommon', :modular_headers => false
  pod 'React-runtimeexecutor', :path => '../node_modules/react-native/ReactCommon/runtimeexecutor', :modular_headers => false
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga', :modular_headers => false

  # ðŸ‘‡ Manual pod for image-picker
  pod 'react-native-image-picker', 
      :path => File.join(__dir__, '../node_modules/react-native-image-picker'), 
      :modular_headers => false

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'FaceRecognitionSdkExampleTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      mac_catalyst_enabled: false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  
    # Fix Boost incompatibility with C++17 (use C++14)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        case target.name
        when 'boost'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++14'
        when 'RCT-Folly'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        end
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      end
    end
    
  
    # Optional FlipperKit patch
    sk_macros_path = File.join(__dir__, 'Pods', 'FlipperKit', 'iOS', 'FlipperKit', 'SKMacros.h')
    if File.exist?(sk_macros_path)
      content = File.read(sk_macros_path)
      patched_content = content.gsub(/^#import <FBDefines\/FBDefines.h>\n?/, "// Removed by Podfile patch\n")
      File.write(sk_macros_path, patched_content)
      puts "âœ… Patched SKMacros.h to remove deprecated FBDefines.h import"
    end
  end  
end
